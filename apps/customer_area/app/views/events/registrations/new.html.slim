.container-event-column
  .wrapper-session
    = simple_form_for @customer_form, url: event_registrations_path(current_event), method: :post do |f|
      h3.center-text = t('registration.new.title')
      .wrapper-redirect-sessions.center-text
        p = t('sessions.log_in.title')
        = link_to t('sessions.log_in.link'), event_login_path(current_event)

      = f.error_notification
      = f.input :event_id, as: :hidden, input_html: { value: current_event.id, class: 'session-input' }
      = f.input :email, autofocus: true, input_html: { class: 'session-input' }, label: t("simple_form.labels.customer.new.email")
      = f.input :password, input_html: { class: 'session-input' }, label: t("simple_form.labels.customer.new.password")
      = f.input :first_name, input_html: { class: 'session-input' }, label: t("simple_form.labels.customer.new.first_name")
      = f.input :last_name, input_html: { class: 'session-input' }, label: t("simple_form.labels.customer.new.last_name")
      = f.input :phone, input_html: { required: true, class: 'session-input' }, label: t("simple_form.labels.customer.new.phone") if current_event.phone?
      = f.input :address, input_html: { required: true, class: 'session-input' }, label: t("simple_form.labels.customer.new.address") if current_event.address?
      = f.input :city, input_html: { required: true, class: 'session-input' }, label: t("simple_form.labels.customer.new.city") if current_event.city?
      = f.input :postcode, input_html: { required: true, class: 'session-input' }, label: t("simple_form.labels.customer.new.postcode") if current_event.postcode?
      // Country select
      = f.input :country, wrapper_html: required: true, { class: 'registration-select' }, input_html: { class: 'session-select' }, label: t("simple_form.labels.customer.new.country") if current_event.country?
      // Gender select
      = f.input :gender, wrapper_html: required: true, { class: 'registration-select' }, collection: Customer.gender_selector, include_blank: false, label: t("simple_form.labels.customer.new.gender") if current_event.gender?
      // Birthday select
      = f.input :birthdate, wrapper_html: required: true, { class: 'registration-select' }, as: :date, start_year: 1950, end_year: Time.zone.today.year - 12, order: [:day, :month, :year], label: t("simple_form.labels.customer.new.birthdate") if current_event.birthdate?
      
      - if current_event.receive_communications?
        .session-accept-terms
          = f.input :receive_communications, as: :boolean,
                                             checked_value: true,
                                             unchecked_value: false,
                                             label: current_event.receive_communications_message.html_safe,
                                             input_html: { checked: true },
                                             wrapper_html: { class: 'customer-agreed-on-registration' }
                                             
      - if current_event.agreed_event_condition?
        .session-accept-terms
          = f.input :agreed_event_condition, as: :boolean,
                                             checked_value: true,
                                             unchecked_value: false,
                                             label: current_event.agreed_event_condition_message.html_safe,
                                             wrapper_html: { class: 'customer-agreed-on-registration' }

      .session-accept-terms = f.input :agreed_on_registration, as: :boolean, checked_value: true, unchecked_value: false, label: ("#{t('conditions.action')} #{link_to t('conditions.terms_of_use'), event_terms_of_use_url, target: '_blank'} #{t('conditions.conjunction')} #{link_to t('conditions.privacy_conditions'), event_privacy_policy_url, target: '_blank'}").html_safe, wrapper_html: { class: 'customer-agreed-on-registration' }
      .wrapper-captcha
        = recaptcha_tags(stoken: false)
        - if @customer_form.errors.messages[:recaptcha].present?
          span.error.captcha-error = @customer_form.errors.messages[:recaptcha].first
      = f.button :submit, t('registration.new.button'), class: "btn btn-action-enter"
