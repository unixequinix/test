= tinymce_assets

= simple_form_for [:admins, event], html: { multipart: true } do |f|
  fieldset
    h3.section-header
      = fa_icon "info-circle"
      = t("admin.event.fieldests.info")
    = f.input :name, placeholder: true, required: true
    = f.input :company_name
    = f.input :support_email, placeholder: true, required: true
    #features
      label
        = t("admin.event.features")
      .controls.no-box-shadow
        - EventDecorator::FEATURES.each_with_index do |feature, index|
          span.checkbox
            = check_box_tag t("admin.event.features_options.#{feature}"), event.flag_mapping["features"][feature], (:checked if event.flag_enabled?(feature)), id: "#{feature}-feature", class: "flag-selector", data: {"checkbox-group" => "features"}
            label.collection_check_boxes for="#{feature}-feature" = t("admin.event.features_options.#{feature}")
    = f.input :features, as: :hidden

    #locales
      label
        = t("admin.event.locales")
      .controls
        - EventDecorator::LOCALES.each_with_index do |locale, index|
          span.checkbox
            = check_box_tag "locales", event.flag_mapping["locales"][locale], (:checked if event.flag_enabled?(locale)), id: "#{locale}-locale", class: "flag-selector", data: {"checkbox-group" => "locales"}
            label.collection_check_boxes for="#{locale}-locale" = t("admin.event.locales_options.#{locale}")
    = f.input :locales, as: :hidden
    = f.input :host_country
    = f.input :currency
    = f.input :token_symbol

    #payment-services
      label
        = t("admin.event.payment_service")
      .controls
        - EventDecorator::PAYMENT_SERVICES.each_with_index do |payment_service, index|
          span.checkbox
            = check_box_tag t("admin.event.payment_services.#{payment_service}"), event.flag_mapping["payment_services"][payment_service], (:checked if event.flag_enabled?(payment_service)), id: "#{payment_service}-payment-service", class: "flag-selector", data: {"checkbox-group" => "payment_services"}
            label.collection_check_boxes for="#{payment_service}-payment-service" = t("admin.event.payment_services.#{payment_service}")
    = f.input :payment_services, as: :hidden

    #refund-services
      label
        = t("admin.event.refund_service")
      .controls
        - EventDecorator::REFUND_SERVICES.each_with_index do |refund_service, index|
          span.checkbox
            = check_box_tag t("admin.event.refund_services.#{refund_service}"), event.flag_mapping["refund_services"][refund_service], (:checked if event.flag_enabled?(refund_service)), id: "#{refund_service}-refund-service", class: "flag-selector", data: {"checkbox-group" => "refund_services"}
            label.collection_check_boxes for="#{refund_service}-refund-service" = t("admin.event.refund_services.#{refund_service}")
    = f.input :refund_services, as: :hidden

    = f.input :url, placeholder: true
    = f.input :description, as: :text, input_html: { rows: 5 }

  fieldset
    h3.section-header
      = fa_icon "calendar"
      = t("admin.event.fieldests.date")
    = f.input :start_date, as: :datetime
    = f.input :end_date, as: :datetime
    = f.input :location, placeholder: true

  fieldset
    h3.section-header
      = fa_icon "file-text-o"
      = t("admin.event.fieldests.text")
    = f.label :info
    = f.input :info, as: :text, input_html: { rows: 15, class: "textarea tinymce" }
    = f.label :disclaimer
    = f.input :disclaimer, as: :text, input_html: { rows: 15, class: "textarea tinymce" }

  fieldset
    h3.section-header
      = fa_icon "camera"
      = t("admin.event.fieldests.image")

    = f.input :logo
    .edit-event-image
      label
        = t('admin.event.images.profile')
      .container-image-preview
        = image_tag event.logo.url unless event.logo.blank?
    = f.input :background_type, collection: EventDecorator.background_types_selector, include_blank: false
    = f.input :background
    .edit-event-image
      label
        = t('admin.event.images.background')
      .container-image-preview
        = image_tag event.background.url unless event.background.blank?

  fieldset
    h3.section-header
      = fa_icon "file-text-o"
      = t("admin.event.fieldests.optional_form_parameters")
    #registration_parameters
      label
        = t("admin.event.features")
      .controls
        - EventDecorator::REGISTRATION_PARAMETERS.each do |parameter|
          span.checkbox
            = check_box_tag "reg_form_param", event.flag_mapping["registration_parameters"][parameter], (:checked if event.flag_enabled?(parameter)), id: "#{parameter}-parameter", class: "flag-selector", data: {"checkbox-group" => "registration_parameters"}
            label.collection_check_boxes for="#{parameter}-parameter" = t("admin.event.features_options.#{parameter}")
      .condition-message
        = f.input :agreed_event_condition_message, as: :text, input_html: { rows: 5, class: "textarea tinymce"}
      .condition-message
        = f.input :receive_communications_message, as: :text, input_html: { rows: 5, class: "textarea tinymce"}
    = f.input :registration_parameters, as: :hidden

  fieldset
    h3.section-header
      = fa_icon "paint-brush"
      = t("admin.event.fieldests.custom")
    = f.input :style, as: :text, input_html: { rows: 40, class: "textarea" }

  .wrapper-negative-space
    = f.button :submit, class: "btn btn-primary"


= tinymce