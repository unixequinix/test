.mdl-grid
  .mdl-layout-spacer
  .mdl-cell.mdl-cell--10-col
    .mdl-grid
      - all_products = Product.where(id: @current_event.voucher_sales.where.not(voucher_amount: 0).pluck(:product_id).uniq)
      = render "admins/events/analytics/box", cols: 6,
              id: 'voucher_products',
              custom_class: 'hovering',
              colors: ['#009688', '#66FF99'],
              icon: 'attach_money',
              title_text: "Products",
              title_number: all_products.count,
              subtitle: [{ text: 'Avg price', number: number_to_reports_credit(all_products.sum(:price) / all_products.count.to_f, @current_event.credit) }, { text: 'Max Price', number: number_to_reports_credit(all_products.maximum(:price), @current_event.credit) }]
      = render "admins/events/analytics/box", cols: 6,
              id: 'voucher_use',
              custom_class: 'hovering',
              colors: ['#FF4E50', '#F9D423'],
              icon: 'attach_money',
              title_text: "Vouchers left over",
              title_number: @current_event.voucher_topups_total - @current_event.voucher_sales_total,
              subtitle: [{ text: 'Topped Up', number: @current_event.voucher_topups_total }, { text: 'Used', number: @current_event.voucher_sales_total }]
  .mdl-layout-spacer


.mdl-cell.mdl-cell--12-col
  .content-grid.mdl-grid
    .mdl-layout-spacer
    .mdl-cell.mdl-cell--12-col.analytics
      table.pvtTable
        thead
          tr
            th.pvtColLabel.empty style="width: 10%;"
            th.pvtColLabel.empty style="width: 10%"
            th.pvtColLabel.empty style="width: 10%"
            - columns = 2
            - @dates.sort.each do |date|
              th.pvtColLabel.high-contrast colspan="#{columns}" = date
            th.pvtColLabel.high-contrast colspan="#{columns}" Totals
          tr
            th.pvtColLabel.low-contrast style="width: 10%; vertical-align: middle; text-align: center" = 'Station Name'
            th.pvtColLabel.low-contrast style="width: 10%; vertical-align: middle; text-align: center" = 'Product Name'
            th.pvtColLabel.low-contrast style="width: 10%; vertical-align: middle; text-align: center" = 'Product Price'
            - @dates.sort.each do |date|
              th.pvtColLabel.low-contrast Vouchers
              th.pvtColLabel.low-contrast Credits
            th.pvtColLabel.low-contrast Vouchers
            th.pvtColLabel.low-contrast Credits

        tbody
          - @stations.each do |station|
            - station_products = station.products
            - data = station.credit_pos_vouchers(product_filter: station_products)
            - totals = @dates.map{ |date| [date, 0] }.to_h
            - next if data.values.all?(&:zero?)

            tr
              td.pvtRowLabel.high-contrast.analytic-card-content style="vertical-align: middle; text-align: center" rowspan="#{station_products.count + 2}" = station.name

              - station.reload.products.each do |product|
                - data = station.credit_pos_vouchers(product_filter: product)

                tr rowspan="#{station_products.count + 2}"
                  th.pvtRowLabel.low-contrast = product.name
                  td.pvtRowLabel.low-contrast = number_to_reports(product.price)

                  - @dates.sort.each do |date|
                    - totals[date] += product.price * data[date].to_f

                    td = data[date].to_i
                    td = number_to_reports(product.price * data[date].to_f)

                  td.pvtTotal.rowTotal.totals = data.values.sum
                  td.pvtTotal.rowTotal.totals = number_to_reports(data.values.sum * product.price)

              tr
                th.pvtRowLabel.low-contrast colspan="2" Totals
                - data = station.credit_pos_vouchers

                - @dates.sort.each do |date|
                  td.pvtTotal.rowTotal.totals = data[date].to_i
                  td.pvtTotal.rowTotal.totals = number_to_reports(totals[date].to_f)

                td.pvtTotal.rowTotal.totals = data.values.sum.to_i
                td.pvtTotal.rowTotal.totals = number_to_reports(totals.values.sum)

    .mdl-layout-spacer
