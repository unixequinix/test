- content_for(:javascripts) do
  = javascript_include_tag 'specific/pivot_tables'

- content_for(:title) do
  | Analytics

.mdl-grid.light-grid
  .mdl-layout-spacer
  .mdl-cell.mdl-cell--12-col
    .transaction-card-wide.mdl-card.mdl-shadow--2dp
      .mdl-tabs.mdl-js-tabs.mdl-js-ripple-effect
        .mdl-tabs__tab-bar.analytics-card-back
          = link_to "Dashboard", "#dashboard-panel", class: "mdl-tabs__tab is-active"
          = link_to cash_flow_admins_event_analytics_path(@current_event), remote: true, class: "mdl-tabs__tab" do
            | Cash Flow
            span.mdl-tabs__ripple-container.mdl-js-ripple-effect
              span.mdl-ripple
          = link_to sales_admins_event_analytics_path(@current_event), remote: true, class: "mdl-tabs__tab" do
            | Sales
            span.mdl-tabs__ripple-container.mdl-js-ripple-effect
              span.mdl-ripple
          = link_to gates_admins_event_analytics_path(@current_event), remote: true, class: "mdl-tabs__tab" do
            | Gates
            span.mdl-tabs__ripple-container.mdl-js-ripple-effect
              span.mdl-ripple
          - if @current_user&.team&.id==2 || @current_user.glowball?
            = link_to partner_reports_admins_event_analytics_path(@current_event), remote: true, class: "mdl-tabs__tab" do
              | Partner Reports
              span.mdl-tabs__ripple-container.mdl-js-ripple-effect
                span.mdl-ripple
          .fake_tab#export-pdf title='Download PDF' onClick="downloadPDF($('.mdl-tabs__tab.is-active').text())"
            i.material-icons#downloadIcon file_download

        #dashboard-panel.mdl-tabs__panel.is-active
          .mdl-grid
            .mdl-layout-spacer
            .mdl-cell.mdl-cell--10-col
              .mld-card
                .content-grid.mdl-grid
                  .mdl-cell.mdl-cell--12-col.no-wrapper-style.margin-auto
                    .mdl-grid.no-wrapper-style.padding
                      = render "box", cols: 3,
                              id: 'topups',
                              custom_class: 'hovering',
                              colors: ['#009688', '#66FF99'],
                              icon: 'attach_money',
                              title_text: "Total Topups in #{@current_event.currency_symbol}",
                              title_number: number_to_reports(@current_event.orders.completed.includes(order_items: :catalog_item).where.not(catalog_items: { type: 'VirtualCredit' }).pluck(:money_base, :money_fee).flatten.sum + @current_event.onsite_topups.sum(:monetary_total_price)),
                              subtitle: [{ text: 'Online', number: number_to_reports(@current_event.orders.completed.includes(order_items: :catalog_item).where.not(catalog_items: { type: 'VirtualCredit' }).pluck(:money_base, :money_fee).flatten.sum) }, { text: 'Onsite', number: number_to_reports(@current_event.onsite_topups.sum(:monetary_total_price)) }]
                      = render "box", cols: 3,
                              id: 'sales',
                              custom_class: 'hovering',
                              colors: ['#FF4E50', '#F9D423'],
                              icon: 'equalizer',
                              title_text: "Total Sales in #{@current_event.currency_symbol}",
                              title_number: number_to_reports(@current_event.onsite_sales.sum(:credit_amount).to_f.abs * @current_event.credit.value),
                              subtitle: [{ text: 'At Bars', number: number_to_reports(@current_event.onsite_sales.where(stations: { category: 'bar' }).sum(:credit_amount).to_f.abs * @current_event.credit.value) },{ text: 'At vendors', number: number_to_reports(@current_event.onsite_sales.where(stations: { category: 'vendor' }).sum(:credit_amount).to_f.abs * @current_event.credit.value) }]
                      = render "box", cols: 3,
                              id: 'spending_power',
                              custom_class: 'hovering',
                              colors: ['#FF5050', '#F3A183'],
                              icon: 'loyalty',
                              title_text: "Spending Power in #{@current_event.currency_symbol}",
                              title_number: number_to_reports(@current_event.total_spending_power),
                              subtitle: [{ text: 'Online', number: number_to_reports(@current_event.online_spending_power) }, { text: 'Onsite', number: number_to_reports(@current_event.onsite_spending_power) }]
                      = render "box", cols: 3,
                              id: 'spending_customers',
                              custom_class: 'hovering',
                              colors: ['#355C7D', '#C06C84'],
                              icon: 'supervisor_account',
                              title_text: 'Spending Customers',
                              title_number: number_with_delimiter(@current_event.onsite_sales.select(:customer_id).distinct.count),
                              subtitle: [{ text: 'Average Spent per Customer', number: number_to_event_currency(@current_event.onsite_sales.sum(:credit_amount).abs / (@current_event.onsite_sales.select(:customer_id).distinct.count.nonzero? || 1)) }]

                  .mdl-cell.mdl-cell--12-col.no-wrapper-style.margin-auto
                    .mdl-grid.no-wrapper-style.padding
                      = render "bar_card", cols: 6,
                              id: 'tickets_orders',
                              colors: ['#F2F2F2', '#F2F2F2'],
                              data: { tickets: { text: 'Tickets Checked In / Tickets in System', current: @current_event.tickets.where(redeemed: true).count, total: @current_event.tickets.count }, orders: { text: "Orders Redeemed / Orders in System", current: @current_event.topup_order_items.where(redeemed: true).sum(:amount), total: @current_event.topup_order_items.sum(:amount) }}
                      = render "box", cols: 3,
                              id: 'products',
                              custom_class: 'hovering',
                              colors: ['#514A9D', '#24C6DC'],
                              icon: 'add_shopping_cart',
                              title_text: 'Total Products Sold',
                              title_number: number_with_delimiter(@current_event.onsite_sales.where("credit_amount < 0").count),
                              subtitle: [{ text: 'At Bars', number: number_with_delimiter(@current_event.onsite_sales.where(stations: { category: 'bar' }).where("credit_amount < 0").count) }, { text: 'At vendors', number: number_with_delimiter(@current_event.onsite_sales.where(stations: { category: 'vendor' }).where("credit_amount < 0").count) }]
                      = render "box", cols: 3,
                              id: 'activations',
                              custom_class: 'hovering',
                              colors: ['#FF0066', '#FF9999'],
                              icon: 'touch_app',
                              title_text: 'Total Activations',
                              title_number: number_with_delimiter(@current_event.customers.count),
                              subtitle: [{ text: 'Customers', number: number_with_delimiter(@current_event.customers.where(operator: false).count) }, { text: 'Staff', number: number_with_delimiter(@current_event.customers.where(operator: true).count) }]


              .mld-card
                .content-grid.mdl-grid
                  .mdl-cell.mdl-cell--12-col.no-wrapper-style.margin-auto
                    .mdl-grid.no-wrapper-style.padding
                      .mdl-cell.analytics-card-back.mdl-cell--6-col
                        .mdl-cell.mdl-cell--12-col
                          canvas#top_products
                      .mdl-cell.analytics-card-back.mdl-cell--6-col
                        .mdl-cell.mdl-cell--12-col
                          canvas#alcohol_products
            .mdl-layout-spacer
        #load-view
          = render 'admins/events/spinner'
          .content

      .mdl-layout-spacer

      - if @current_event.launched?
        .mdl-cell.mdl-cell--12-col
          .center-card-title
            span.analytics-text = "Data shown here is provisional until the event is closed, all device are synced & locked, and the event data is fully wrapped."

javascript:
  componentHandler.upgradeDom();
  $(window).load(function(e) {
    $(".is-active").click();
  });

  $(document).ready(function() {
    $(".mdl-tabs__tab").click(function(e) {
      var elem = e.currentTarget;
      var elems = $(".mdl-tabs__tab");
      elems.splice($.inArray(elem, elems), 1);
      elems.removeClass("is-active");
      elem.text == 'Dashboard' ? $('#load-view').hide() : $('#load-view').show();
      $(elem).addClass("is-active");
    });

  });

  function downloadPDF(previousName) {
    var eventData = JSON.parse("#{escape_javascript(@current_event.attributes.slice("name", "support_email").merge({logo_url: @current_event.logo.url(:panel)}).to_json.html_safe)}");
    canvasToPDF($('.mdl-tabs__panel.is-active'), previousName, eventData);
  }

  function gradientSector(ctx, colors) {
    var gradient = ctx.createLinearGradient(0, 200, 100, 20);
    gradient.addColorStop(0, colors[0]);
    gradient.addColorStop(1, colors[1]);
    return gradient
  }

  var credit_symbol = '#{ @current_event.credit.symbol }'
  var color_scale_a = [["#11998E", "#38EF7D"], ["#74EBD5", "#ACB6E5"]]
  var data_a = #{ @alcohol_products.to_json.html_safe }
  var is_alcohol = data_a.map(function (e) { return e.is_alcohol });
  var credits = data_a.map(function (e) { return e.credits });
  var ctx_alcohol = document.getElementById("alcohol_products").getContext('2d');

  new Chart(ctx_alcohol, {
    type: 'doughnut',
    data: {
      labels: is_alcohol,
      datasets: [
        {
          label: "Product" + credit_symbol,
          data: credits,
          backgroundColor: color_scale_a.map(function(colors) {return gradientSector(ctx_alcohol, colors)}),
          hoverBackgroundColor: color_scale_a.map(function(colors) {return gradientSector(ctx_alcohol, colors)}),
          hoverBorderWidth: 2,
					hoverBorderColor: '#CCCCCC'
        }
      ]
    },
    options: {
      title: {
        display: true,
        text: 'Alcohol Products vs Non Alcohol'
      },
      legend: {
        position: 'right'
      },
      tooltips: {
        custom: function(tooltip) {
          if (!tooltip) return;
          tooltip.displayColors = false;
        },
        callbacks: {
          title: function(tooltipItem, data) {
            return [data.labels[tooltipItem[0].index]]
          },
          label: function(tooltipItem, data) {
            return [
              "Credits: " + data.datasets[0].data[tooltipItem.index] + " " + "#{@event_currency}",
              "Amount: " + data_a[tooltipItem.index].amount
            ]
          }
        }
      }
    }
  });

  var color_scale_p = [["#36D1DC", "#5B86E5"], ["#CAC531", "#F3F9A7"], ["#BC4E9C", "#F80759"], ["#00F260", "#0575E6"], ["#834D9B", "#D04ED6"], ["#11998E", "#38EF7D"], ["#4DA0B0", "#D39D38"], ["#EECDA3", "#EF629F"], ["#FC4A1A", "#F7B733"], ["#FF5F6B", "#FFC371"]];
  var data_p = #{@top_products.to_json.html_safe};
  var product_name = data_p.map(function (e) { return e.product_name });
  var credits = data_p.map(function (e) { return e.credits });
  var ctx_products = document.getElementById("top_products").getContext('2d');

  new Chart(ctx_products, {
    type: 'doughnut',
    data: {
      labels: product_name,
      datasets: [
        {
          label: "Product" + credit_symbol,
          data: credits,
          backgroundColor: color_scale_p.map(function(colors) {return gradientSector(ctx_products, colors)}),
          hoverBackgroundColor: color_scale_p.map(function(colors) {return gradientSector(ctx_products, colors)}),
          hoverBorderWidth: 2,
					hoverBorderColor: '#CCCCCC'
        }
      ]
    },
    options: {
      title: {
        display: true,
        text: "Top " + product_name.length + " products " + credit_symbol
      },
      legend: {
        position: 'right'
      },
      tooltips: {
        custom: function(tooltip) {
          if (!tooltip) return;
          tooltip.displayColors = false;
        },
        callbacks: {
          title: function(tooltipItem, data) {
            return [data.labels[tooltipItem[0].index]]
          },
          label: function(tooltipItem, data) {
            return [
              "Credits: " + data.datasets[0].data[tooltipItem.index] + " " + "#{@event_currency}",
            ]
          }
        }
      }
    }
  });
