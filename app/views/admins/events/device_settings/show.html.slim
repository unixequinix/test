- breadcrumb :admins_event_device_settings, @current_event
- provide :actions do
  = link_to edit_admins_event_device_settings_path(@current_event), class: "btn btn-action btn-action-edit small" do
    = fa_icon 'edit'
    = t('actions.edit')
  = link_to load_defaults_admins_event_device_settings_path(current_event), class: "btn btn-action btn-action-edit small", data: { confirm: "This will override all Device settings, are you sure?" } do
    = fa_icon 'cogs'
    = t('actions.load_defaults')

.wrapper-negative-space
  - unless current_admin.customer_service?
    .container-databases
      h3.dashboard-table-header = t("admin.dashboard.databases")
      .wrapper-dashboard-reverse-devices
        .database
          .database__name
            = t('admin.event.databases.full')
          .database__updated
            = @current_event.device_full_db_updated_at&.strftime("%y-%m-%d %H:%M:%S") || t("admin.event.databases.not_found")
          .database__size
            = number_to_human_size(@current_event.device_full_db_file_size)
          .database__actions
            = link_to remove_db_admins_event_device_settings_path(@current_event, db: "device_full_db"), method: :delete, data: { confirm: t('admin.confirm.delete') }, class: "database__btn #{"database__btn--disabled" if @current_event.device_full_db.blank?}"
              => fa_icon("ban")
              = t('admin.event.databases.clear')
            = link_to DatabaseManager.new(@current_event, "full").generate_url(60), class: "database__btn database__btn--download #{"database__btn--disabled" if @current_event.device_full_db.blank?}"
              => fa_icon("download")
              = t('admin.event.databases.download')
        .database
          .database__name
            = t('admin.event.databases.basic')
          .database__updated
            = @current_event.device_basic_db_updated_at&.strftime("%y-%m-%d %H:%M:%S") || t("admin.event.databases.not_found")
          .database__size
            = number_to_human_size(@current_event.device_basic_db_file_size)
          .database__actions
            = link_to remove_db_admins_event_device_settings_path(@current_event, db: "device_basic_db"), method: :delete, data: { confirm: t('admin.confirm.delete') }, class: "database__btn #{"database__btn--disabled" if @current_event.device_basic_db.blank?}"
              => fa_icon("ban")
              = t('admin.event.databases.clear')
            = link_to DatabaseManager.new(@current_event, "basic").generate_url(60), class: "database__btn database__btn--download #{"database__btn--disabled" if @current_event.device_basic_db.blank?}"
              => fa_icon("download")
              = t('admin.event.databases.download')

  .container-show
    dl
      dt = t("admin.device_settings.form.min_version_apk")
      dd = format_abstract_value current_event.min_version_apk
      dt = t("admin.device_settings.form.private_zone_password")
      dd = format_abstract_value current_event.private_zone_password
      dt = t("admin.device_settings.form.fast_removal_password")
      dd = format_abstract_value current_event.fast_removal_password
      dt = t("admin.device_settings.form.uid_reverse")
      dd = format_abstract_value current_event.uid_reverse
      dt = t("admin.device_settings.form.touchpoint_update_online_orders")
      dd = format_abstract_value current_event.touchpoint_update_online_orders
      dt = t("admin.device_settings.form.pos_update_online_orders")
      dd = format_abstract_value current_event.pos_update_online_orders
      dt = t("admin.device_settings.form.topup_initialize_gtag")
      dd = format_abstract_value current_event.topup_initialize_gtag
      dt = t("admin.device_settings.form.cypher_enabled")
      dd = format_abstract_value current_event.cypher_enabled
      dt = t("admin.device_settings.form.gtag_blacklist")
      dd = format_abstract_value current_event.gtag_blacklist
      dt = t("admin.device_settings.form.transaction_buffer")
      dd = format_abstract_value current_event.transaction_buffer
      dt = t("admin.device_settings.form.days_to_keep_backup")
      dd = format_abstract_value current_event.days_to_keep_backup
      dt = t("admin.device_settings.form.days_to_keep_backup_min")
      dd = format_abstract_value current_event.days_to_keep_backup_min
      dt = t("admin.device_settings.form.sync_time_event_parameters")
      dd = format_abstract_value current_event.sync_time_event_parameters
      dt = t("admin.device_settings.form.sync_time_event_parameters_min")
      dd = format_abstract_value current_event.sync_time_event_parameters_min
      dt = t("admin.device_settings.form.sync_time_server_date")
      dd = format_abstract_value current_event.sync_time_server_date
      dt = t("admin.device_settings.form.sync_time_server_date_min")
      dd = format_abstract_value current_event.sync_time_server_date_min
      dt = t("admin.device_settings.form.sync_time_basic_download")
      dd = format_abstract_value current_event.sync_time_basic_download
      dt = t("admin.device_settings.form.sync_time_basic_download_min")
      dd = format_abstract_value current_event.sync_time_basic_download_min
      dt = t("admin.device_settings.form.sync_time_tickets")
      dd = format_abstract_value current_event.sync_time_tickets
      dt = t("admin.device_settings.form.sync_time_tickets_min")
      dd = format_abstract_value current_event.sync_time_tickets_min
      dt = t("admin.device_settings.form.sync_time_gtags")
      dd = format_abstract_value current_event.sync_time_gtags
      dt = t("admin.device_settings.form.sync_time_gtags_min")
      dd = format_abstract_value current_event.sync_time_gtags_min
      dt = t("admin.device_settings.form.sync_time_customers")
      dd = format_abstract_value current_event.sync_time_customers
      dt = t("admin.device_settings.form.sync_time_customers_min")
      dd = format_abstract_value current_event.sync_time_customers_min

    .container-hidden
      = current_admin.access_token
