.content-grid.mdl-grid
  .admin-card-wide.mdl-card.mdl-shadow--2dp
    .mdl-grid style="width: 100%"
      .mdl-cell.mdl-cell--6-col.left
        = render "layouts/resources"

      .mdl-cell.mdl-cell--6-col
        -if @current_event.pokes.empty? && @current_event.transactions.any?
          .center-card-title
            h4 style="text-align: center; width: 100%; color: #999"
              |Your analytics were not generated here, please download them
              = link_to " here", zoho_report_admins_event_path(@current_event)
              |.
        -else
          .mdl-card__title.mdl-card--expand
            .mdl-card__title-text Event Activity
          canvas#event_activity

javascript:
    var ctx = document.getElementById("event_activity").getContext('2d');
    var views = JSON.parse("#{escape_javascript(@activity.to_json.html_safe)}");
    var eventData = views.data;

    var datasets = {
        topups: { label: 'Topups', data: [], fill: false, borderColor: "#F9D423", extraData: [] },
        sales: { label: 'Sales', data: [], fill: false, borderColor: "#26D0CE", extraData: [] },
        refunds: { label: 'Refunds', data: [], fill: false, borderColor: "#F3A183", extraData: [] }
    };

    ctx.canvas.height = 300;

    $.each(eventData, function(i, item) {
        datasets.topups.data.push(item.topups);
        datasets.sales.data.push(item.sales);
        datasets.refunds.data.push(item.refunds);
    });

    new Chart(ctx, {
        type: 'line',
        data: {
            labels: eventData.map(function(item) {return item.date_time}),
            datasets: Object.keys(datasets).map(function(key) {return datasets[key]})
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero:true
                    }
                }]
            },
            legend: {
                position: 'bottom'
            },
            tooltips: {
                custom: function(tooltip) {
                    if (!tooltip) return;
                    tooltip.displayColors = false;
                },
                callbacks: {
                    title: function(tooltipItem, data) {
                        var titleData = tooltipItem[0];
                        var key = Object.keys(datasets)[titleData.datasetIndex];
                        return [
                            key.charAt(0).toUpperCase() + key.slice(1),
                            titleData.xLabel
                        ]
                    }
                }
            }
        }
    });
