- content_for(:title) do
  .mdl-layout-title.header-item
    | Team &nbsp;
    = @team.name

- content_for(:actions) do
  *{:class => (current_user.admin? ? 'floaty' : 'floaty-intercom'), :id => 'floaty'}
    ul.floaty-list#actions-list
      - if @current_user.team_leader?
        li.floaty-list-item
          = link_to '#add-user-modal' do
            button#add-user.mdl-button.mdl-js-button.mdl-button--fab.mdl-button--mini-fab.mdl-button--colored
              i.material-icons person_add
              span.mdl-tooltip.mdl-tooltip--left data-mdl-for="add-user" Add user
        li.floaty-list-item
          = link_to remove_devices_admins_user_team_path(current_user), method: :delete do
            button#delete_devices.mdl-button.mdl-js-button.mdl-button--fab.mdl-button--mini-fab.mdl-button--colored
              i.material-icons delete_forever
              span.mdl-tooltip.mdl-tooltip--left data-mdl-for="delete_devices" Remove unused devices
      li.floaty-list-item
        = link_to '#add-modal' do
          button#add.mdl-button.mdl-js-button.mdl-button--fab.mdl-button--mini-fab.mdl-button--colored
            i.material-icons add
            span.mdl-tooltip.mdl-tooltip--left data-mdl-for="add" Add device
      li.floaty-list-item
        = link_to '#import-modal' do
          button#upload.mdl-button.mdl-js-button.mdl-button--fab.mdl-button--mini-fab.mdl-button--colored
            i.material-icons file_upload
            span.mdl-tooltip.mdl-tooltip--left data-mdl-for="upload" Import devices
    ul.floaty-btn#button
      li
        button.mdl-button.mdl-js-button.mdl-button--fab.mdl-button--colored
          i.material-icons#changeIcon build

- if @current_user.team_leader?
  .remodal data-remodal-id="add-user-modal"
    button.remodal-close data-remodal-action="close"
    h3.remodal__title Add user to the team
    = simple_form_for :user, url: add_users_admins_user_team_path(current_user), html: {multipart: true}, wrapper: :mdl_field_floating, wrapper_mappings: {text: :mdl_text_edit, boolean: :mdl_switch, file: :mdl_upload} do |f|
      p = f.input :email, placeholder: true, as: :string, autofocus: true
      .remodal__actions
        = f.submit "Submit", class: "mdl-button mdl-js-button mdl-button--raised mdl-button--accent form-submit"

  .remodal data-remodal-id="add-modal"
    button.remodal-close data-remodal-action="close"
    h3.remodal__title Add device to the team
    = simple_form_for :device, url: add_devices_admins_user_team_path(current_user), html: {multipart: true}, wrapper: :mdl_field_floating, wrapper_mappings: {text: :mdl_text_edit, boolean: :mdl_switch, file: :mdl_upload} do |f|
      p = f.input :asset_tracker, placeholder: true, as: :string, autofocus: true
      p = f.input :mac, placeholder: true, as: :string, autofocus: true
      .remodal__actions
        = f.submit "Submit", class: "mdl-button mdl-js-button mdl-button--raised mdl-button--accent form-submit"

  .remodal data-remodal-id="import-modal"
    button.remodal-close data-remodal-action="close"
    h3.remodal__title Import devices by CSV file
    = simple_form_for :file, url: import_devices_admins_user_team_path(current_user), html: {multipart: true}, wrapper: :mdl_field_floating, wrapper_mappings: {text: :mdl_text_edit, boolean: :mdl_switch, file: :mdl_upload} do |f|
      p = f.file_field :data, label: :import
      p
        | Download a
        = link_to " sample CSV", sample_csv_admins_user_team_path(current_user, current_user.team, format: "csv")
        |  template to see an example of the format required.
      .remodal__actions
        = f.submit "Submit", class: "mdl-button mdl-js-button mdl-button--raised mdl-button--accent form-submit"

.content-grid.mdl-grid
  .mdl-layout-spacer
  .mdl-cell.mdl-cell--10-col
    .mdl-cell.mdl-cell--12-col
      .admin-card-wide.mdl-card.mdl-shadow--2dp
        .mdl-card__title
          .mdl-card__title-text 
            i.material-icons group
            | Team name: 
          .mdl-layout-spacer
          .mdl-card__title-text 
            = best_in_place @team, :name, url: admins_user_team_path(@current_user)
    .mdl-cell.mdl-cell--12-col
      .admin-card-wide.mdl-card.mdl-shadow--2dp
        .mdl-card__title
          .mdl-card__title-text 
            | Users in team
        .table-fix
          table.mdl-data-table.mdl-js-data-table.within-card.sortable
            thead
              th
              th.mdl-data-table__cell--non-numeric Username
              th.mdl-data-table__cell--non-numeric Email
              th.mdl-data-table__cell--non-numeric Role
            tbody
            - @team.users.each do |user|
              tr
                td
                td.mdl-data-table__cell--non-numeric = user.username 
                td.mdl-data-table__cell--non-numeric = user.email
                td.mdl-data-table__cell--non-numeric = user.team_role
                td 
                  - if user == @current_user || @current_user.team_leader?
                    = link_to remove_users_admins_user_team_path(@current_user, user: { email: user.email }), method: :delete, class: "mdl-button mdl-button--icon" do
                      span.icon.material-icons delete

    .mdl-cell.mdl-cell--12-col
      .admin-card-wide.mdl-card.mdl-shadow--2dp
        .mdl-card__title
          .mdl-card__title-text 
            | Devices in series
        .table-fix
          table.mdl-data-table.mdl-js-data-table.within-card
            thead
              th
              th.mdl-data-table__cell--non-numeric Name
              th.mdl-data-table__cell--non-numeric Number of devices
            tbody
            - @grouped_devices.each_pair do |serie, devices|
              tr
                td
                td.mdl-data-table__cell--non-numeric 
                  = serie.nil? ? "Without serie" : "Serie #{serie}" 
                td.mdl-data-table__cell--non-numeric = devices.count

    .mdl-layout-spacer
    .mdl-cell.mdl-cell--12-col
      .admin-card-wide.mdl-card.mdl-shadow--2dp
        .mdl-card__title
          h4.left style="text-align: center; width: 100%;" All devices
          .mdl-textfield.mdl-js-textfield.mdl-textfield--floating-label.getmdl-select.getmdl-select__fullwidth
            = search_form_for @q, url: admins_user_team_path do |f|
              = f.select :serie_cont, options_for_select(@team.devices_series.map {|serie| [serie, serie]}.insert(0, ['All series', nil]), params.dig(:q, :serie_cont)), {}, class: "mdl-textfield__input", id: "search_by_series", onchange: 'this.form.submit();'
        .table-responsive
          table.mdl-data-table.mdl-js-data-table.within-card.sortable
            thead
              tr
                th.mdl-data-table__cell--non-numeric Asset Number
                th Serie
                th Mac
                th Serial
                th
            = render 'devices_list', devices: @devices

  / = render "layouts/pagination", objects: @devices
  .mdl-layout-spacer

