.admin-card-wide.mdl-card.mdl-shadow--2dp
  table.mdl-data-table.within-card.sortable
    thead
      tr.not-sortable
        th.no-icon data-sorter="false" #
        th.mdl-data-table__cell--non-numeric.no-icon data-sorter="false" Name
        th.no-icon data-sorter="false" VAT
        th.no-icon data-sorter="false" Alcohol
        th.no-icon data-sorter="false" Hidden
        th.no-icon data-sorter="false" Prices
        th.no-icon data-sorter="false"

    tbody
      - @items.each do |product|
        tr.sortable-tr data-id="#{product.id}" class="#{'resource-hidden' if product.hidden?}"
          td.table-sortable-field.collapse-link-closed = fa_icon("bars")
          td.mdl-data-table__cell--non-numeric = best_in_place product, :name, as: :input, url: [:admins, @current_event, product.station, product]
          td = best_in_place product, :vat, as: :input, url: [:admins, @current_event, product.station, product]
          td = best_in_place product, :is_alcohol, best_in_place_checkbox([:admins, @current_event, product.station, product])
          td = best_in_place product, :hidden, best_in_place_checkbox([:admins, @current_event, product.station, product])
          td 
            i.material-icons.collapse-link-closed id="prices-menu-#{product.id}" more_vert
            ul.mdl-menu.mdl-menu--bottom-right.mdl-js-menu.mdl-js-ripple-effect for="prices-menu-#{product.id}"
              = simple_form_for product, url: admins_event_station_product_path(@current_event, product.station, product), html: { novalidate: true }, wrapper: :mdl_field_floating, wrapper_mappings: { text: :mdl_text_edit } do |f|
                - @current_event.currencies.each do |currency|
                  li.mdl-menu__item style="line-height: 1rem"
                    .form-inputs
                      = f.simple_fields_for(:prices) do |ff|
                        = ff.input "[#{currency.id.to_s}][price]".to_sym, html5: false, :input_html => { type: :number, step: (currency.type.eql?('Token') ? 0.0 : 0.1), :value => product&.prices.try(:[], currency.id.to_s).try(:[], 'price').presence&.to_f }, label: currency.name.humanize
                    
                .form-actions
                  = f.submit "Save", class: "mdl-button mdl-js-button mdl-button--raised mdl-button--accent form-submit"

          td.table-actions
            .table-action
              - if StationItemPolicy.new(@current_user, product).destroy?
                = link_to admins_event_station_station_item_path(@current_event, @station, product, item_type: "product"), id:"delete_#{product.id}", method: :delete, data: { confirm: t("alerts.confirm_delete") } do
                  button.icon.material-icons delete_forever
javascript:
  $(".edit_product").find(".mdl-textfield__input, input.mdl-button").on('click', function(event) {
    event.stopPropagation();
  });

  function setPositions() {
    $('.sortable tbody tr.sortable-tr').each(function(i) {
        $(this).attr("data-pos", i + 1);
    });
  }

  function sortPosition() {
    setPositions();
    $('.sortable').sortable({
      items: 'tr:not(.not-sortable)' ,
      placeholder: '<tr><td class="sortable-placeholder" colspan="6">&nbsp;</td></tr>',
      handle: '.table-sortable-field i'
    });
    $('.sortable').sortable().bind('sortupdate', function(e, ui) {
        updated_order = [];
        setPositions();

        $('.sortable tr').each(function(i){
            updated_order.push({ id: $(this).data("id"), position: i + 1 });
        });


        $.ajax({
            type: "PUT",
            url: "#{sort_admins_event_station_station_items_path(@current_event, @station, item_type: 'product')}",
            data: { order: updated_order }
        });
    });
  }

  $(document).ready(sortPosition);
  $(document).on('turbolinks:load', sortPosition);
