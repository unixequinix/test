- title = @operator_mode ? 'operators' : 'customers'

- content_for(:title) do
  = title.titleize

- content_for(:search) do
  = search_form_for @q, url: admins_event_customers_path do |f|
    = f.search_field :email_or_full_name_cont, class: "mdl-textfield__input", id: "fixed-header-drawer-exp"


- content_for(:actions) do
  .floaty#floaty
    ul.floaty-list#actions-list
      li.floaty-list-item
        = link_to admins_event_customers_path(format: "csv") do
          button#download.mdl-button.mdl-js-button.mdl-button--fab.mdl-button--mini-fab.mdl-button--colored
            i.material-icons file_download
            span.mdl-tooltip.mdl-tooltip--left data-mdl-for="download" Download CSV
      li.floaty-list-item
        = link_to '#import-modal' do
          button#upload.mdl-button.mdl-js-button.mdl-button--fab.mdl-button--mini-fab.mdl-button--colored
            i.material-icons file_upload
            span.mdl-tooltip.mdl-tooltip--left data-mdl-for="upload" Import
    ul.floaty-btn#button
      li
        button.mdl-button.mdl-js-button.mdl-button--fab.mdl-button--colored
          i.material-icons#changeIcon build

- if @bad_customers.present?
  .content-grid.mdl-grid
    .mdl-layout-spacer
    .mdl-cell.mdl-cell--12-col
      .alert
        - if @bad_customers[:error_parsing].present?
          .alert__title Errors while parsing CSV
          - @bad_customers[:error_parsing].each do |row|
            p.alert__messages= row
        - if @bad_customers[:customer_exists  ].present?
          .alert__title Tickets are associated to other customers or were created before
          - @bad_customers[:customer_exists].each do |row|
            p.alert__messages= row
        - if @bad_customers[:ticket_error].present?
          .alert__title Impossible to create tickets
          - @bad_customers[:ticket_error].each do |row|
            p.alert__messages= row
- any_orders = @current_event.orders.completed.any?
.content-grid.mdl-grid
  .mdl-layout-spacer
  .mdl-cell.mdl-cell--12-col
    = render "layouts/pagination", objects: @customers
    .admin-card-wide.mdl-card.mdl-shadow--2dp
      .table-responsive
        table.mdl-data-table.mdl-js-data-table.within-card
          thead
            tr
              th.mdl-data-table__cell--non-numeric Email
              th.mdl-data-table__cell--non-numeric Name
              th Tickets
              th Gtags
              - if any_orders
                th Orders
          tbody
            - @customers.each do |customer|
              tr [id="customer-#{customer.id}"]
                td.mdl-data-table__cell--non-numeric data-label="Email" = link_to customer.full_email, admins_event_customer_path(@current_event, customer), id:"email_#{customer.id}"
                td.mdl-data-table__cell--non-numeric data-label="First name" = customer.name
                td data-label="Tickets"
                  -  if customer.tickets.any?
                    i.material-icons done
                  - else
                    i.material-icons clear
                td data-label="Gtags"
                  - if customer.active_gtag.present?
                    i.material-icons done
                  - else
                    i.material-icons clear
                - if any_orders
                  td data-label="Orders"
                    = customer.orders.size

    = render "layouts/pagination", objects: @customers
  .mdl-layout-spacer

.remodal data-remodal-id="import-modal"
  button.remodal-close data-remodal-action="close"
  h3.remodal__title= "Import #{title} by CSV file"
  = simple_form_for :file, url: import_admins_event_customers_path(@current_event, operator: @operator_mode), html: { multipart: true }, wrapper: :mdl_field_floating, wrapper_mappings: {text: :mdl_text_edit, boolean: :mdl_switch, file: :mdl_upload} do |f|
    p = f.file_field :data, label: :import
    p
      | Download a
      = link_to " sample CSV", sample_csv_admins_event_customers_path(@current_event, format: "csv")
      |  template to see an example of the format required.
    p.warning  WARNING: No more than 10.000 customers at each time can be created. Please use separated CSVs to import more.
    - unless @operator_mode
      p
        = check_box_tag :send_email
        ' Send confirmation email to all customers
      p.warning WARNING: Don't send emails on bigger imports to avoid glownet.com marked as spammer.
    .remodal__actions
      = f.submit "Submit", class: "mdl-button mdl-js-button mdl-button--raised mdl-button--accent form-submit"