- items = @current_event.catalog_items.where(id: @current_event.monetary_box_office(station_filter: @station).select(:catalog_item_id).distinct.pluck(:catalog_item_id))
- payments = @current_event.monetary_box_office(station_filter: @station).select(:payment_method).distinct.pluck(:payment_method)
- purchases = @current_event.count_money_box_office(station_filter: @station).reject { |_, v| v.zero? }
- dates = purchases.keys

- if admin_or_promoter_or(:monetary_manager, :vendor_manager)
  .mdl-grid
    .mdl-layout-spacer
    .mdl-cell.mdl-cell--11-col
      .mdl-grid
        = render "admins/events/analytics/shared/box", cols: 4,
                id: 'topups',
                custom_class: 'hovering',
                colors: ['#009688', '#66FF99'],
                icon: 'attach_money',
                title_text: "Topups",
                title_number: number_to_reports(@current_event.money_box_office_total(station_filter: @station)),
                subtitle: payments.map { |payment| { text: payment.humanize, number: number_to_reports_currency(@current_event.money_box_office_total(payment_filter: payment, station_filter: @station)) } }
        = render "admins/events/analytics/shared/box", cols: 4,
                id: 'devices',
                custom_class: 'hovering',
                colors: ['#FF4E50', '#F9D423'],
                icon: 'phone_android',
                title_text: "Devices",
                title_number: @station.count_devices,
                subtitle: [{ text: 'Avg devices per operator', number: number_to_reports(@station.count_devices.to_f / @station.count_operators.to_f) }, { text: 'Avg sale per device', number: number_to_reports_currency(purchases.values.sum / @station.count_devices) }]
        = render "admins/events/analytics/shared/box", cols: 4,
                id: 'operators',
                custom_class: 'hovering',
                colors: ['#FF5050', '#F3A183'],
                icon: 'face',
                title_text: "Operators",
                title_number: @station.count_operators,
                subtitle: [{ text: 'Avg sale', number: number_to_reports_currency(purchases.values.sum / @station.count_operators.to_f) }, { text: 'Avg sale per day', number: number_to_reports_currency(purchases.values.sum / @station.count_operators.to_f / dates.size) }]
    .mdl-layout-spacer

.content-grid.mdl-grid
  = render 'admins/events/analytics/shared/export_buttons', title: 'Box office purchases per day',
          excel_path: admins_event_station_path(@current_event, format: "xls", station_category: "box_office"),
          pdf_path: admins_event_station_path(@current_event, format: "pdf", station_category: "box_office")

= render "admins/events/analytics/stations/tables/box_office", purchases: purchases, dates: dates, items: items, payments: payments

- if admin_or_promoter_or(:monetary_manager)
  - data = @current_event.plot(items.map { |item| [item.name.underscore, @current_event.money_box_office(grouping: :hour, station_filter: @station, catalog_filter: item)] }.to_h)
  - chart_data = { chart_id: "box_office_flow", cols: [@current_event.currency_symbol], currency: @current_event.currency_symbol, data: data, metric: [@current_event.currency_symbol], decimals: 2 }
  - top_items = @station.pokes.top_items.as_json
  
  .content-grid.mdl-grid
    .mdl-cell.mdl-cell--12-col
      .mdl-grid
        - unless(chart_data[:data].empty?)
          .mdl-cell.mdl-cell--6-col
            = render 'admins/events/analytics/shared/line_chart', chart_data: chart_data, name: 'Box office purchases per hour'

        - unless(top_items.empty?)
          .mdl-cell.mdl-cell--6-col
            .content-grid.mdl-grid
              .mdl-cell.mdl-cell--12-col
                .mdl-card__title.mdl-card--expand
                  .mdl-card__title-text Top 10 items
                = render "admins/events/analytics/shared/doughnut_card", chart_id: "top_items",
                    label: "Product #{@current_event.credit.symbol}",
                    data: top_items.map {|e| e["credits"].to_f},
                    labels: top_items.map {|e| e["product_name"]}.to_json.html_safe,
                    color_scale: [["#36D1DC", "#5B86E5"], ["#CAC531", "#F3F9A7"], ["#BC4E9C", "#F80759"], ["#00F260", "#0575E6"], ["#834D9B", "#D04ED6"], ["#11998E", "#38EF7D"], ["#4DA0B0", "#D39D38"], ["#EECDA3", "#EF629F"], ["#FC4A1A", "#F7B733"], ["#FF5F6B", "#FFC371"]].to_json.html_safe,
                    gradient: true,
                    raw_data: top_items.to_json.html_safe						
