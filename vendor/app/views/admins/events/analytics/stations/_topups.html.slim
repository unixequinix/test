- topups = @current_event.money_topups(station_filter: @station)
- dates = topups.reject { |_, v| v.zero? }.keys
- payments = @current_event.onsite_payment_methods
- cash_recon = @current_event.cash_recon(station_filter: @station).order(:date)

- if admin_or_promoter_or(:monetary_manager, :vendor_manager)
  .mdl-grid
    .mdl-layout-spacer
    .mdl-cell.mdl-cell--11-col
      .mdl-grid
        = render "admins/events/analytics/shared/box", cols: 4,
                id: 'topups',
                custom_class: 'hovering',
                colors: ['#009688', '#66FF99'],
                icon: 'attach_money',
                title_text: "Topups",
                title_number: number_to_reports(topups.values.sum),
                subtitle: payments.map { |payment| { text: payment.humanize, number: number_to_reports_currency(@current_event.money_topups_total(payment_filter: payment, station_filter: @station)) } }
        = render "admins/events/analytics/shared/box", cols: 4,
                id: 'devices',
                custom_class: 'hovering',
                colors: ['#FF4E50', '#F9D423'],
                icon: 'phone_android',
                title_text: "Devices",
                title_number: @station.count_devices,
                subtitle: [{ text: 'Avg devices per operator', number: number_to_reports(@station.count_devices.to_f / @station.count_operators.to_f) }, { text: 'Avg topup per device', number: number_to_reports_currency(topups.values.sum / @station.count_devices) }]
        = render "admins/events/analytics/shared/box", cols: 4,
                id: 'operators',
                custom_class: 'hovering',
                colors: ['#FF5050', '#F3A183'],
                icon: 'face',
                title_text: "Operators",
                title_number: @station.count_operators,
                subtitle: [{ text: 'Avg topups', number: number_to_reports_currency(topups.values.sum / @station.count_operators.to_f) }, { text: 'Avg topups per day', number: number_to_reports_currency(topups.values.sum / @station.count_operators.to_f / dates.size) }]
    .mdl-layout-spacer

.content-grid.mdl-grid
  = render 'admins/events/analytics/shared/export_buttons', title: 'Topups per day',
          excel_path: admins_event_station_path(@current_event, format: "xls", station_category: "topups"),
          pdf_path: admins_event_station_path(@current_event, format: "pdf", station_category: "topups")

= render "admins/events/analytics/stations/tables/topups", topups: topups, dates: dates, payments: payments

- if cash_recon.present?
  .content-grid.mdl-grid
    .mdl-layout-spacer
    .mdl-cell.mdl-cell--12-col.analytics
      .mdl-card__title.mdl-card--expand
        .mdl-card__title-text Cash Reconciliation

      table.pvtTable
        thead
          tr
            th.pvtColLabel.high-contrast Operator
            th.pvtColLabel.high-contrast UID
            th.pvtColLabel.high-contrast Location
            th.pvtColLabel.high-contrast Station
            th.pvtColLabel.high-contrast Device
            th.pvtColLabel.high-contrast Session finish
            th.pvtColLabel.high-contrast Record result


        tbody
          - cash_recon.each do |poke|
            - danger = !poke.monetary_total_price.zero?
            tr
              th.pvtRowLabel.low-contrast style="#{'color: #d9534f' if danger }" = poke.operator.name
              td style="#{'color: #d9534f' if danger }" = poke.operator_gtag.tag_uid
              td style="#{'color: #d9534f' if danger }" = poke.station.location
              td style="#{'color: #d9534f' if danger }" = poke.station.name
              td style="#{'color: #d9534f' if danger }" = poke.device.asset_tracker
              td style="#{'color: #d9534f' if danger }" = poke.date
              td style="#{'color: #d9534f' if danger }" = number_to_reports(poke.monetary_total_price)


  .mdl-layout-spacer

- if admin_or_promoter_or(:monetary_manager)
  - data = payments.map { |payment| [payment.to_sym, @current_event.money_topups(grouping: :hour, station_filter: @station, payment_filter: payment)] }.to_h
  - chart_data = { chart_id: "sales_flow", cols: ["Credits"], currency: "", data: @current_event.plot(data), metric: ["Credits"], decimals: 2 }
  - money_topups = @station.pokes.top_money_topup_amounts

  .content-grid.mdl-grid
    .mdl-cell.mdl-cell--12-col
      .mdl-grid
        - unless(chart_data[:data].empty?)
          .mdl-cell.mdl-cell--6-col
            = render 'admins/events/analytics/shared/line_chart', chart_data: chart_data, name: "Topups per hour"
        - unless(money_topups.empty?)
          .mdl-cell.mdl-cell--6-col
            .content-grid.mdl-grid
              .mdl-cell.mdl-cell--12-col
                .mdl-card__title.mdl-card--expand
                  .mdl-card__title-text Top 10 amounts
                = render "admins/events/analytics/shared/doughnut_card", chart_id: "top_products",
                    label: "Product #{@current_event.credit.symbol}",
                    data: money_topups.map {|e| e["credits"].to_f},
                    labels: money_topups.map {|e| e["product_name"]}.to_json.html_safe,
                    color_scale: [["#36D1DC", "#5B86E5"], ["#CAC531", "#F3F9A7"], ["#BC4E9C", "#F80759"], ["#00F260", "#0575E6"], ["#834D9B", "#D04ED6"], ["#11998E", "#38EF7D"], ["#4DA0B0", "#D39D38"], ["#EECDA3", "#EF629F"], ["#FC4A1A", "#F7B733"], ["#FF5F6B", "#FFC371"]].to_json.html_safe,
                    gradient: true,
                    raw_data: money_topups.to_json.html_safe	
